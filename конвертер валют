<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name ="viewport" content="width=device-width, initial-scale=1.0">
    <title>currency converter</title>
    <style>
        :root {
            --primary-color: #4361ee;
            --secondary-color: #3f37c9;
            --accent-color: #4895ef;
            --light-color: #f8f9fa;
            --dark-color: #212529;
            --success-color: #4cc9f0;
            --error-color: #f72585;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Roboto', sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }

        .container {
            background: white;
            border-radius: 16px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 500px;
            padding: 30px;
            animation: fadeIn 0.6s ease-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        h2 {
            color: var(--dark-color);
            text-align: center;
            margin-bottom: 30px;
            font-weight: 700;
            font-size: 28px;
        }

        .converter-form {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .input-group {
            display: flex;
            flex-direction: column;
            gap: 8px;
        }

        label {
            font-weight: 500;
            color: var(--dark-color);
            font-size: 14px;
        }

        select, input {
            padding: 14px 16px;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            font-size: 16px;
            transition: all 0.3s ease;
            background-color: var(--light-color);
        }

        select:focus, input:focus {
            outline: none;
            border-color: var(--accent-color);
            box-shadow: 0 0 0 3px rgba(72, 149, 239, 0.2);
        }

        select {
            appearance: none;
            background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right 12px center;
            background-size: 16px;
        }

        .btn {
            background-color: var(--primary-color);
            color: white;
            border: none;
            padding: 14px;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }

        .btn:hover {
            background-color: var(--secondary-color);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(67, 97, 238, 0.3);
        }

        .btn:active {
            transform: translateY(0);
        }

        .error {
            color: var(--error-color);
            font-size: 14px;
            margin-top: 5px;
            min-height: 20px;
            text-align: center;
        }

        .output {
            margin-top: 30px;
            padding: 20px;
            background-color: var(--light-color);
            border-radius: 8px;
            text-align: center;
            font-size: 20px;
            font-weight: 500;
            color: var(--dark-color);
            display: none;
            animation: slideUp 0.4s ease-out;
        }

        @keyframes slideUp {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .rate-info {
            font-size: 14px;
            color: #6c757d;
            margin-top: 10px;
        }

        .loading {
            display: none;
            text-align: center;
            margin: 20px 0;
        }

        .spinner {
            width: 40px;
            height: 40px;
            margin: 0 auto;
            border: 4px solid rgba(67, 97, 238, 0.2);
            border-radius: 50%;
            border-top-color: var(--primary-color);
            animation: spin 1s ease-in-out infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        @media (max-width: 576px) {
            .container {
                padding: 20px;
            }

            h2 {
                font-size: 24px;
            }
        }
    </style>
</head>
<body>
    <h2>currency converter</h2>
    <form id="converterForm">
    <select id="currency" name="currency" required>
        <option value="">--choose currency--</option>
        <option value="USD">USD(dollar usa)</option>
        <option value="EUR">EUR(eur europe)</option>
        <option value="VND">vnd(vietnam vnd)</option>
        <option value="CNY">cny(chinese cny)</option>
        <option value="AUD">aude(australian aud)</option>
        <option value="TRY">try(turkish try)</option>
    </select>
    <input type="number" id="amount" name="amount" step="0.01" min="0.01" required>
     <button type="button" id="convertBtn">Convert</button>
    </form>
    <div id="error" class="error"></div>
    <div id="output"></div>
    <script>
        let exchangeRates = {};
       document.addEventListener('DOMContentLoaded',async function () {
         try {
              const response = await fetch('https://api.exchangerate-api.com/v4/latest/USD')
              const data =await response.json();


           if (data.rates) {
               exchangeRates = data.rates;
               if (exchangeRates.RUB) {
                 exchangeRates.RUB=82.09
               }
           }  else {
             document.getElementById('error').innerText="Failed to fetch exchange rates";
           }
       } catch (error) {
          console.error('error loading exchange rates:', error)
          document.getElementById('error').innerText ="connection error with api";
          }

        document.getElementById('convertBtn').addEventListener('click', function(){
          const amount = parseFloat(document.getElementById('amount').value);
          const currency = document.getElementById('currency').value;
          const output = document.getElementById('output')
          const errorDiv = document.getElementById('error');


         errorDiv.innerHTML = '';
         output.innerHTML = '';

         if (!currency) {
             errorDiv.innerHTML = 'choose a currency'
             return;
         }

         if (isNaN(amount) || amount <= 0) {
             errorDiv.innerHTML = "the amount must be greater than zero"
             return;
         }

         const rateToCurrency = exchangeRates[currency];
         const rateFromeRUB= exchangeRates.RUB

         if (!rateToCurrency){
             errorDiv.innerText = "exchange rate not found"
             return;
         }

         const result = (amount / rateFromeRUB * rateToCurrency).toFixed(2);
         output.innerHTML = `${amount} RUB = ${result}${currency}`;
     });
    });
    </script>
</body>
</html>
